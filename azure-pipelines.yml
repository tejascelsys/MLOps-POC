trigger:
- main

pr:
- main

variables:
  fabricWorkspace: $(fabricWorkspaceVar)  # Workspace ID
  artifactId: $(artifactIdVar)            # Notebook/Artifact ID
  azureTenantId: $(azureTenantIdVar)      # Azure Tenant ID
  clientId: $(clientIdVar)                # App Registration Client ID
  clientSecret: $(clientSecretVar)        # App Registration Client Secret (marked as secret)
  System.Debug: true

stages:
- stage: TokenGeneration
  displayName: 'Generate Access Token'
  jobs:
  - job: GenerateToken
    displayName: 'Generate Azure Access Token'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - script: |
        echo "Starting Fabric Notebook Pipeline..."

        # Download requirements and install
        curl -O https://raw.githubusercontent.com/tejascelsys/MLOps-POC/refs/heads/v3/requirements.txt
        pip install -r requirements.txt

        # Requesting a new access token
        echo "Requesting a new access token..."
        test_token_response=$(curl -X POST "https://login.microsoftonline.com/$(azureTenantId)/oauth2/v2.0/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "client_id=$(clientId)&scope=https://api.fabric.microsoft.com/.default&client_secret=$(clientSecret)&grant_type=client_credentials")

        echo "Raw Token Response: $test_token_response"      
        test_access_token=$(echo "$test_token_response" | jq -r '.access_token')
        echo "Access token: $test_access_token"
        
        # Set the access token for use in subsequent stages
        echo "##vso[task.setvariable variable=accessToken]$test_access_token"

- stage: TriggerNotebook
  displayName: 'Trigger Notebook Execution'
  jobs:
  - job: RunFabricNotebook
    displayName: 'Run Notebook in Microsoft Fabric'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - script: |
        echo "Triggering Fabric Notebook Job with access token..."
        echo "Access token being used: $(accessToken)"

        response=$(curl -s -X POST "https://api.fabric.microsoft.com/v1/workspaces/4e9ac160-b418-44de-99e1-874ff3fd479e/items/0a2296b1-c2fa-44b7-852c-754274b5b388/jobs/instances?jobType=RunNotebook" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $(accessToken)" \
          -d '{
                "executionData": {
                    "parameters": {},
                    "configuration": {
                        "conf": {
                            "spark.master": "yarn"
                        },
                        "defaultLakehouse": {
                            "name": "Electric_Vehicle",
                            "id": "d46bc1e7-cd79-4d30-95af-bdbeebeffe2e",
                            "workspaceId": "4e9ac160-b418-44de-99e1-874ff3fd479e"
                        },
                        "useStarterPool": false,
                        "useWorkspacePool": "StarterPool"
                    }
                }
            }')

        echo "Raw API Response: $response"  # Log the raw API response
