trigger:
- main

pr:
- main

variables:
  fabricWorkspace: $(fabricWorkspaceVar)  # Workspace ID
  artifactId: $(artifactIdVar)            # Notebook/Artifact ID
  azureTenantId: $(azureTenantIdVar)      # Azure Tenant ID
  clientId: $(clientIdVar)                # App Registration Client ID
  clientSecret: $(clientSecretVar)        # App Registration Client Secret (marked as secret)
  System.Debug: true

jobs:
- job: RunFabricNotebook
  displayName: 'Run Notebook in Microsoft Fabric'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - script: |
      echo "Debugging Secrets" 
      echo "Client Secret: $(CLIENTSECRETVAR)"
      echo "Client Id is : $(CLIENTIDVAR)"
      echo "Starting Fabric Notebook Pipeline..."

      # Function to get a new access token
      get_access_token() {
        echo "Requesting a new access token..."
        
        # Requesting the access token
        token_response=$(curl -s -X POST "https://login.microsoftonline.com/$(AZURETENANTIDVAR)/oauth2/v2.0/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "client_id=$(CLIENTIDVAR)&scope=https://api.fabric.microsoft.com/.default&client_secret=$(CLIENTSECRETVAR)&grant_type=client_credentials")
        
        # Check the status of the response
        echo "Token Response: $token_response"
        
        # Extract access token using jq
        access_token=$(echo "$token_response" | jq -r '.access_token')

        # Verify if the token is retrieved
        if [[ -z "$access_token" || "$access_token" == "null" ]]; then
          echo "Error: Failed to retrieve access token from response."
          echo "Response Body: $token_response"
          exit 1
        fi

        echo "Access Token: $access_token"  # Log the access token for debugging
        echo $access_token
      }


      # Function to trigger the notebook job
      trigger_notebook_job() {
        # local token=$1
        echo "Triggering Fabric Notebook Job with access token..."
        echo "Access token being used: $(TOKEN)"

        response=$(curl -s -X POST "https://api.fabric.microsoft.com/v1/workspaces/4e9ac160-b418-44de-99e1-874ff3fd479e/items/0a2296b1-c2fa-44b7-852c-754274b5b388/jobs/instances?jobType=RunNotebook" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $(TOKEN)" \
          -d '{
                "executionData": {
                    "parameters": {},
                    "configuration": {
                        "conf": {
                            "spark.master": "yarn"
                        },
                        "defaultLakehouse": {
                            "name": "Electric_Vehicle",
                            "id": "d46bc1e7-cd79-4d30-95af-bdbeebeffe2e",
                            "workspaceId": "4e9ac160-b418-44de-99e1-874ff3fd479e"
                        },
                        "useStarterPool": false,
                        "useWorkspacePool": "StarterPool"
                    }
                }
            }')

        echo "Raw API Response: $response"  # Log the raw API response
      }

      # Main execution
      echo "Step 1: Retrieving access token..."
      access_token=$(get_access_token)
      
      echo "Step 2: Triggering the notebook job..."
      trigger_notebook_job "$access_token"

      echo "Step 3: Notebook job triggered successfully."
       # displayName: 'Run Fabric Notebook with Debugging'
      
      # echo "Testing token retrieval separately..."

      # test_token_response=$(curl -X POST "https://login.microsoftonline.com/c5e52224-ee99-4449-86e4-9f71d30f361b/oauth2/v2.0/token" -H "Content-Type: application/x-www-form-urlencoded" -d "client_id=e4f3d468-692b-4545-9376-d50c634767aa&scope=https://api.fabric.microsoft.com/.default&client_secret=$(CLIENTSECRETVAR)&grant_type=client_credentials")

      # # Print the raw response
      # echo "Raw Token Response: $test_token_response"      
      # test_access_token=$(echo "$test_token_response" | jq -r '.access_token')
  

      # if [[ -z "$test_access_token" || "$test_access_token" == "null" ]]; then
      #   echo "Error: Failed to retrieve access token."
      #   echo "Response: $test_token_response"
      #   exit 1
      # else
      #   echo "Successfully retrieved access token: $test_access_token"
      # fi