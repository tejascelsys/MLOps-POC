trigger:
- main

pr:
- main

variables:
  fabricWorkspace: $(fabricWorkspaceVar)  # Workspace ID
  artifactId: $(artifactIdVar)            # Notebook/Artifact ID
  azureTenantId: $(azureTenantIdVar)      # Azure Tenant ID
  clientId: $(clientIdVar)                # App Registration Client ID
  clientSecret: $(clientSecretVar)        # App Registration Client Secret (marked as secret)

jobs:
- job: RunFabricNotebook
  displayName: 'Run Notebook in Microsoft Fabric'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - script: |
        echo "Starting Fabric Notebook Pipeline..."

        # Function to get a new access token
        get_access_token() {
          echo "Requesting a new access token..."
          token_response=$(curl -s -X POST "https://login.microsoftonline.com/${azureTenantId}/oauth2/v2.0/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=${clientId}&scope=https://api.fabric.microsoft.com/.default&client_secret=${clientSecret}&grant_type=client_credentials")
          
          echo "Raw Token Response: $token_response"  # Log the raw token response

          access_token=$(echo "$token_response" | jq -r '.access_token' 2>/dev/null)

          if [[ -z "$access_token" || "$access_token" == "null" ]]; then
            echo "Error: Failed to parse access token from the response."
            exit 1
          fi

          echo "Parsed Access Token: $access_token"  # Log the parsed token
          echo $access_token
        }

        # Function to trigger the notebook job
        trigger_notebook_job() {
          local token=$1
          echo "Triggering Fabric Notebook Job with access token..."
          response=$(curl -s -X POST "https://api.fabric.microsoft.com/v1/workspaces/${fabricWorkspace}/items/${artifactId}/jobs/instances?jobType=RunNotebook" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${token}" \
            -d '{
                  "executionData": {
                      "parameters": {},  # Add specific notebook parameters here if needed
                      "configuration": {
                          "conf": {
                              "spark.master": "yarn"
                          },                     
                          "defaultLakehouse": {
                              "name": "Electric_Vehicle",
                              "id": "d46bc1e7-cd79-4d30-95af-bdbeebeffe2e",
                              "workspaceId": "4e9ac160-b418-44de-99e1-874ff3fd479e"
                          },
                          "useStarterPool": false,
                          "useWorkspacePool": "StarterPool"
                      }
                  }
              }')

          echo "Raw API Response: $response"  # Log the raw API response

          job_instance_url=$(echo "$response" | jq -r '.Location' 2>/dev/null)
          if [[ -n "$job_instance_url" && "$job_instance_url" != "null" ]]; then
            echo "Job successfully created. Monitor the job at: $job_instance_url"
          else
            echo "Error: Failed to create job. Response: $response"
            exit 1
          fi
        }

        # Function to handle API response and retry if token expired
        handle_response() {
          local response=$1
          if echo "$response" | grep -q '"errorCode": "TokenExpired"'; then
            echo "Access token expired. Generating a new token and retrying..."
            access_token=$(get_access_token)
            response=$(trigger_notebook_job "$access_token")
            handle_response "$response"
          elif echo "$response" | grep -q "error"; then
            echo "An error occurred: $response"
            exit 1
          else
            echo "Notebook job triggered successfully."
          fi
        }

        # Main execution
        echo "Step 1: Retrieving access token..."
        access_token=$(get_access_token)
        
        echo "Step 2: Triggering the notebook job..."
        response=$(trigger_notebook_job "$access_token")

        echo "Step 3: Handling the API response..."
        handle_response "$response"
    displayName: 'Run Fabric Notebook'