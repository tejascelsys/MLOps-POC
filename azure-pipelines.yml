trigger:
  branches:
    include:
      - main

variables:
  fabricWorkspace: $(fabricWorkspaceVar)  # Workspace ID
  artifactId: $(artifactIdVar)            # Notebook/Artifact ID
  azureTenantId: $(azureTenantIdVar)      # Azure Tenant ID
  clientId: $(clientIdVar)                # App Registration Client ID
  clientSecret: $(clientSecretVar)        # App Registration Client Secret (marked as secret)
  System.Debug: true

stages:
- stage: GenerateAccessToken
  displayName: 'Generate Access Token'
  jobs:
  - job: TokenGeneration
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Requesting a new access token..."
        test_token_response=$(curl -X POST "https://login.microsoftonline.com/$(azureTenantId)/oauth2/v2.0/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "client_id=$(clientId)&scope=https://api.fabric.microsoft.com/.default&client_secret=$(clientSecret)&grant_type=client_credentials")
        
        echo "Raw Token Response: $test_token_response"
        accessToken=$(echo "$test_token_response" | jq -r '.access_token')
        echo "Access token: $accessToken"

        # Mark the access token as an output variable
        echo "##vso[task.setvariable variable=accessToken;isOutput=true]$accessToken"
      displayName: 'Generate Access Token'

- stage: TriggerFabricNotebookJob
  displayName: 'Trigger Fabric Notebook Job'
  dependsOn: GenerateAccessToken  # Make this stage dependent on the first stage
  variables:
    accessToken: $[ dependencies.GenerateAccessToken.outputs['TokenGeneration.accessToken'] ]  # Reference the output variable
  jobs:
  - job: NotebookExecution
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Triggering Fabric Notebook Job with access token..."
        echo "Access token being used: $(accessToken)"

        response=$(curl -s -X POST "https://api.fabric.microsoft.com/v1/workspaces/$(fabricWorkspace)/items/$(artifactId)/jobs/instances?jobType=RunNotebook" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $(accessToken)" \
          -d '{
                "executionData": {
                    "parameters": {},
                    "configuration": {
                        "conf": {
                            "spark.master": "yarn"
                        },
                        "defaultLakehouse": {
                            "name": "Electric_Vehicle",
                            "id": "d46bc1e7-cd79-4d30-95af-bdbeebeffe2e",
                            "workspaceId": "$(fabricWorkspace)"
                        },
                        "useStarterPool": false,
                        "useWorkspacePool": "StarterPool"
                    }
                }
            }')

        echo "Raw API Response: $response"  # Log the raw API response
      displayName: 'Trigger Fabric Notebook Job'
